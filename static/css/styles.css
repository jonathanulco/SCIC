*,
*::before,
*::after {
  box-sizing: border-box; }

html {
  font-family: sans-serif;
  line-height: 1.15;
  -webkit-text-size-adjust: 100%;
  -ms-text-size-adjust: 100%;
  -ms-overflow-style: scrollbar;
  -webkit-tap-highlight-color: transparent; }

@-ms-viewport {
  width: device-width; }

article, aside, dialog, figcaption, figure, footer, header, hgroup, main, nav, section {
  display: block; }

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
  font-size: 1rem;
  font-weight: 400;
  line-height: 1.5;
  color: #212529;
  text-align: left;
  background-color: #fff; }

[tabindex="-1"]:focus {
  outline: none !important; }

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible; }

h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  margin-bottom: 0.5rem; }

p {
  margin-top: 0;
  margin-bottom: 1rem; }

abbr[title],
abbr[data-original-title] {
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted;
  cursor: help;
  border-bottom: 0; }

address {
  margin-bottom: 1rem;
  font-style: normal;
  line-height: inherit; }

ol,
ul,
dl {
  margin-top: 0;
  margin-bottom: 1rem; }

ol ol,
ul ul,
ol ul,
ul ol {
  margin-bottom: 0; }

dt {
  font-weight: 700; }

dd {
  margin-bottom: .5rem;
  margin-left: 0; }

blockquote {
  margin: 0 0 1rem; }

dfn {
  font-style: italic; }

b,
strong {
  font-weight: bolder; }

small {
  font-size: 80%; }

sub,
sup {
  position: relative;
  font-size: 75%;
  line-height: 0;
  vertical-align: baseline; }

sub {
  bottom: -.25em; }

sup {
  top: -.5em; }

a {
  color: #007bff;
  text-decoration: none;
  background-color: transparent;
  -webkit-text-decoration-skip: objects; }

a:hover {
  color: #0056b3;
  text-decoration: underline; }

a:not([href]):not([tabindex]) {
  color: inherit;
  text-decoration: none; }

a:not([href]):not([tabindex]):focus, a:not([href]):not([tabindex]):hover {
  color: inherit;
  text-decoration: none; }

a:not([href]):not([tabindex]):focus {
  outline: 0; }

pre,
code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

pre {
  margin-top: 0;
  margin-bottom: 1rem;
  overflow: auto;
  -ms-overflow-style: scrollbar; }

figure {
  margin: 0 0 1rem; }

img {
  vertical-align: middle;
  border-style: none; }

svg:not(:root) {
  overflow: hidden; }

a,
area,
button,
[role="button"],
input:not([type="range"]),
label,
select,
summary,
textarea {
  touch-action: manipulation; }

table {
  border-collapse: collapse; }

caption {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  color: #868e96;
  text-align: left;
  caption-side: bottom; }

th {
  text-align: inherit; }

label {
  display: inline-block;
  margin-bottom: .5rem; }

button {
  border-radius: 0; }

button:focus {
  outline: 1px dotted;
  outline: 5px auto -webkit-focus-ring-color; }

input,
button,
select,
optgroup,
textarea {
  margin: 0;
  font-family: inherit;
  font-size: inherit;
  line-height: inherit; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  padding: 0;
  border-style: none; }

input[type="radio"],
input[type="checkbox"] {
  box-sizing: border-box;
  padding: 0; }

input[type="date"],
input[type="time"],
input[type="datetime-local"],
input[type="month"] {
  -webkit-appearance: listbox; }

textarea {
  overflow: auto;
  resize: vertical; }

fieldset {
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0; }

legend {
  display: block;
  width: 100%;
  max-width: 100%;
  padding: 0;
  margin-bottom: .5rem;
  font-size: 1.5rem;
  line-height: inherit;
  color: inherit;
  white-space: normal; }

progress {
  vertical-align: baseline; }

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

[type="search"] {
  outline-offset: -2px;
  -webkit-appearance: none; }

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  font: inherit;
  -webkit-appearance: button; }

output {
  display: inline-block; }

summary {
  display: list-item; }

template {
  display: none; }

[hidden] {
  display: none !important; }

/*# sourceMappingURL=bootstrap-reboot.css.map */
body {
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  /* font stack from Medium */ }

@media (min-width: 76.7em) {
  @font-face {
    font-family: 'Lato';
    src: url("/font/Lato-Regular.woff2") format("woff2"); }
  @font-face {
    font-family: 'Lato Black';
    src: url("/font/Lato-Black.woff2") format("woff2"); }
  @font-face {
    font-family: 'Lato Bold';
    src: url("/font/Lato-Bold.woff2") format("woff2"); }
  @font-face {
    font-family: 'Lato Light';
    src: url("/font/Lato-Light.woff2") format("woff2"); }
  body {
    font-family: "Lato"; }
  h1 {
    font-family: "Lato Black"; }
  h2 {
    font-family: "Lato Bold"; } }

html {
  /* set base font-size to equiv "10px", which is adapted to rem unit */
  font-size: 62.5%;
  /* IE9-IE11 math fixing. See http://bit.ly/1g4X0bX */
  font-size: calc(1em * 0.625); }

body {
  position: relative;
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  color: #313131;
  background: #aed2dd; }

.invisible {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  border: 0; }

.button {
  display: inline-block;
  padding: 1rem 2rem;
  font-size: 2.7rem;
  letter-spacing: 2px;
  text-transform: uppercase;
  color: #272f80;
  border: 5px solid #272f80; }
  .button.button--cta {
    color: #fefefe;
    border: none;
    background: #f87339;
    text-transform: none;
    font-size: 2.9rem; }

footer {
  margin-top: auto;
  color: #313131;
  background: #fefefe; }
  footer .footer-int {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    margin: 0 auto;
    max-width: 99.1em; }
  footer a {
    color: #6a6a6a; }
  footer ul {
    margin: 0 0 2rem;
    padding: 0; }
  footer li {
    list-style: none; }

.banner {
  color: #aed2dd;
  background: #272f80; }
  .banner .header-int {
    display: flex;
    align-items: center;
    flex-direction: row;
    flex-wrap: wrap;
    margin: 0 auto;
    max-width: 119.9em;
    min-height: 7rem; }
  .banner .logo {
    font-size: 2.5rem; }
  .banner .baseline {
    margin: 0 0.5rem 0 2rem;
    line-height: 1.1;
    font-size: 1.3rem; }
    .banner .baseline span {
      display: block; }
  .banner nav {
    margin-left: auto;
    font-size: 1.4rem; }
  .banner ul {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    margin: 0 1rem;
    padding: 0; }
  .banner li {
    margin: 0 0.8rem;
    list-style: none; }
  .banner nav a {
    position: relative;
    display: block;
    font-weight: 900;
    text-transform: uppercase;
    color: #fefefe; }
    .banner nav a:hover, .banner nav a:focus {
      text-decoration: none;
      color: #fefefe; }
    .banner nav a:hover:before, .banner nav a:focus:before, .banner nav a.active:before {
      position: absolute;
      z-index: 1;
      content: '';
      top: 60%;
      left: 50%;
      width: 110%;
      height: 5px;
      -webkit-transform: translateX(-50%);
              transform: translateX(-50%);
      background: #f87339; }
    .banner nav a span {
      position: relative;
      z-index: 2; }

main .main-int {
  margin: 0 auto;
  max-width: 99.1em;
  padding: 0 5vw; }

.home main {
  padding-bottom: 20vh; }
  .home main header {
    display: flex;
    flex-direction: column;
    justify-content: center;
    min-height: 70vh;
    text-align: center;
    background: url(); }
    .home main header h1 {
      font-size: 5.7rem;
      line-height: 1.1;
      color: #272f80; }
      .home main header h1 span {
        display: block; }
      .home main header h1 a {
        font-size: 2.9rem; }
    .home main header + p {
      margin-bottom: 3rem;
      font-size: 2rem;
      text-align: center;
      color: #272f80; }
      .home main header + p + p {
        margin-bottom: 3rem;
        text-align: center; }

form [class*="step"] > legend {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  width: auto;
  max-width: none; }
  form [class*="step"] > legend span {
    padding: .5rem 1rem; }
  form [class*="step"] > legend span:first-of-type {
    background: #f87339;
    color: #fefefe;
    text-transform: uppercase; }
  form [class*="step"] > legend span:last-of-type {
    background: #fefefe;
    color: #272f80; }

form [class*="step"] > fieldset legend {
  border-left: 3px solid #f87339;
  padding-left: 1rem;
  color: #272f80;
  font-size: 1.4rem; }

form [class*="step"] > fieldset {
  padding: 1rem 0;
  margin-bottom: 3rem; }
  form [class*="step"] > fieldset label {
    margin: 0 .5rem 0 2rem; }
  form [class*="step"] > fieldset input[type="radio"] {
    vertical-align: middle; }

.article main {
  background: #fefefe;
  color: #272f80; }

.article .main-int {
  max-width: 99.1em; }

.article article {
  font-size: 1.8rem; }

.article .cover-image {
  -o-object-fit: cover;
     object-fit: cover;
  height: auto;
  max-width: 100%; }

.article h1 {
  font-size: 4.8rem; }

.article h2 {
  font-size: 3.2rem; }

.article header + p strong {
  font-size: 3.2rem; }

#progressbar {
  margin-top: 10vh;
  margin-bottom: 30px;
  overflow: hidden;
  /*CSS counters to number the steps*/
  counter-reset: step;
  display: flex;
  flex-direction: row;
  justify-content: center; }

#progressbar li {
  list-style-type: none;
  color: #aed2dd;
  text-transform: uppercase;
  font-size: 9px;
  width: 25%;
  position: relative; }

#progressbar li:before {
  content: counter(step);
  counter-increment: step;
  width: 30px;
  line-height: 30px;
  display: block;
  font-size: 1rem;
  color: #aed2dd;
  background: #272f80;
  border-radius: 50%;
  margin: 0 auto 5px auto;
  text-align: center; }

/*progressbar connectors*/
#progressbar li:after {
  content: '';
  width: 100%;
  height: 8px;
  background: #272f80;
  position: absolute;
  left: -50%;
  top: 11px;
  z-index: -1; }

#progressbar li:first-child:after {
  content: none; }

#progressbar li.active:before, #progressbar li.active:after {
  background: #f87339;
  color: #272f80; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2V0LnNjc3MiLCJzdHlsZXMuY3NzIiwic2NpYy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBOzs7RUFHRSx1QkFBc0IsRUFDdkI7O0FBRUQ7RUFDRSx3QkFBdUI7RUFDdkIsa0JBQWlCO0VBQ2pCLCtCQUE4QjtFQUM5QiwyQkFBMEI7RUFDMUIsOEJBQTZCO0VBQzdCLHlDQUF3QyxFQUN6Qzs7QUFFRDtFQUNFLG9CQUFtQixFQUFBOztBQUdyQjtFQUNFLGVBQWMsRUFDZjs7QUFFRDtFQUNFLFVBQVM7RUFDVCxrS0FBaUs7RUFDakssZ0JBQWU7RUFDZixpQkFBZ0I7RUFDaEIsaUJBQWdCO0VBQ2hCLGVBQWM7RUFDZCxpQkFBZ0I7RUFDaEIsdUJBQXNCLEVBQ3ZCOztBQ0pEO0VET0UseUJBQXdCLEVBQ3pCOztBQUVEO0VBQ0Usd0JBQXVCO0VBQ3ZCLFVBQVM7RUFDVCxrQkFBaUIsRUFDbEI7O0FBRUQ7RUFDRSxjQUFhO0VBQ2Isc0JBQXFCLEVBQ3RCOztBQUVEO0VBQ0UsY0FBYTtFQUNiLG9CQUFtQixFQUNwQjs7QUFFRDs7RUFFRSwyQkFBMEI7RUFDMUIsMENBQXlDO0VBQ2pDLGtDQUFpQztFQUN6QyxhQUFZO0VBQ1osaUJBQWdCLEVBQ2pCOztBQUVEO0VBQ0Usb0JBQW1CO0VBQ25CLG1CQUFrQjtFQUNsQixxQkFBb0IsRUFDckI7O0FBRUQ7OztFQUdFLGNBQWE7RUFDYixvQkFBbUIsRUFDcEI7O0FBRUQ7Ozs7RUFJRSxpQkFBZ0IsRUFDakI7O0FBRUQ7RUFDRSxpQkFBZ0IsRUFDakI7O0FBRUQ7RUFDRSxxQkFBb0I7RUFDcEIsZUFBYyxFQUNmOztBQUVEO0VBQ0UsaUJBQWdCLEVBQ2pCOztBQUVEO0VBQ0UsbUJBQWtCLEVBQ25COztBQUVEOztFQUVFLG9CQUFtQixFQUNwQjs7QUFFRDtFQUNFLGVBQWMsRUFDZjs7QUFFRDs7RUFFRSxtQkFBa0I7RUFDbEIsZUFBYztFQUNkLGVBQWM7RUFDZCx5QkFBd0IsRUFDekI7O0FBRUQ7RUFDRSxl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QUFQSDtFQVNJLGtCQUFnQixFQUNqQjs7QUFWSDtFQVlJLHFCQUFnQjtLQUFoQixrQkFBZ0I7RUFDaEIsYUFBVztFQUNYLGdCQUFjLEVBQ2Y7O0FBZkg7RUFpQkksa0JBQWdCLEVBQ2pCOztBQWxCSDtFQW9CSSxrQkFBZ0IsRUFDakI7O0FBckJIO0VBdUJJLGtCQUFnQixFQUNqQjs7QUFJSDtFQUNFLGlCQUFnQjtFQUNoQixvQkFBbUI7RUFDcEIsaUJBQWdCO0VBQ2hCLG9DQUFvQztFQUNwQyxvQkFBbUI7RUFDbEIsY0FBWTtFQUNaLG9CQUFrQjtFQUNsQix3QkFBc0IsRUFDdkI7O0FBQ0Q7RUFDQyxzQkFBcUI7RUFDckIsZUFoVGU7RUFpVGYsMEJBQXlCO0VBQ3pCLGVBQWM7RUFDZCxXQUFVO0VBQ1YsbUJBQWtCLEVBQ2xCOztBQUNEO0VBQ0MsdUJBQXNCO0VBQ3RCLHdCQUF1QjtFQUN2QixZQUFXO0VBQ1gsa0JBQWlCO0VBQ2pCLGVBQWM7RUFDZCxnQkFBZTtFQUNmLGVBN1RlO0VBOFRmLG9CQXBVbUI7RUFxVW5CLG1CQUFrQjtFQUNsQix3QkFBdUI7RUFDdEIsbUJBQWlCLEVBQ2xCOztBQUNELDBCQUEwQjtBQUMxQjtFQUNDLFlBQVc7RUFDWCxZQUFXO0VBQ1gsWUFBVztFQUNYLG9CQTlVbUI7RUErVW5CLG1CQUFrQjtFQUNsQixXQUFVO0VBQ1YsVUFBUTtFQUNQLFlBQVcsRUFDWjs7QUFDRDtFQUNDLGNBQWEsRUFDYjs7QUFDRDtFQUNDLG9CQXZWd0I7RUF3VnhCLGVBelZtQixFQTBWbkIiLCJmaWxlIjoic3R5bGVzLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIHJlYm9vdCBib290c3RyYXAgXG4qLFxuKjo6YmVmb3JlLFxuKjo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC1tcy10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IHNjcm9sbGJhcjtcbiAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuQC1tcy12aWV3cG9ydCB7XG4gIHdpZHRoOiBkZXZpY2Utd2lkdGg7XG59XG5cbmFydGljbGUsIGFzaWRlLCBkaWFsb2csIGZpZ2NhcHRpb24sIGZpZ3VyZSwgZm9vdGVyLCBoZWFkZXIsIGhncm91cCwgbWFpbiwgbmF2LCBzZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG4gIGZvbnQtZmFtaWx5OiAtYXBwbGUtc3lzdGVtLCBCbGlua01hY1N5c3RlbUZvbnQsIFwiU2Vnb2UgVUlcIiwgUm9ib3RvLCBcIkhlbHZldGljYSBOZXVlXCIsIEFyaWFsLCBzYW5zLXNlcmlmLCBcIkFwcGxlIENvbG9yIEVtb2ppXCIsIFwiU2Vnb2UgVUkgRW1vamlcIiwgXCJTZWdvZSBVSSBTeW1ib2xcIjtcbiAgZm9udC1zaXplOiAxcmVtO1xuICBmb250LXdlaWdodDogNDAwO1xuICBsaW5lLWhlaWdodDogMS41O1xuICBjb2xvcjogIzIxMjUyOTtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuW3RhYmluZGV4PVwiLTFcIl06Zm9jdXMge1xuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7XG59XG5cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIGhlaWdodDogMDtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07XG59XG5cbnAge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG5hYmJyW3RpdGxlXSxcbmFiYnJbZGF0YS1vcmlnaW5hbC10aXRsZV0ge1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICBjdXJzb3I6IGhlbHA7XG4gIGJvcmRlci1ib3R0b206IDA7XG59XG5cbmFkZHJlc3Mge1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xufVxuXG5vbCxcbnVsLFxuZGwge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xufVxuXG5vbCBvbCxcbnVsIHVsLFxub2wgdWwsXG51bCBvbCB7XG4gIG1hcmdpbi1ib3R0b206IDA7XG59XG5cbmR0IHtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cblxuZGQge1xuICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbmJsb2NrcXVvdGUge1xuICBtYXJnaW46IDAgMCAxcmVtO1xufVxuXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG59XG5cbmIsXG5zdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyO1xufVxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG5zdWIsXG5zdXAge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xufVxuXG5zdWIge1xuICBib3R0b206IC0uMjVlbTtcbn1cblxuc3VwIHtcbiAgdG9wOiAtLjVlbTtcbn1cblxuYSB7XG4gIGNvbG9yOiAjMDA3YmZmO1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbi1za2lwOiBvYmplY3RzO1xufVxuXG5hOmhvdmVyIHtcbiAgY29sb3I6ICMwMDU2YjM7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG5hOm5vdChbaHJlZl0pOm5vdChbdGFiaW5kZXhdKSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmE6bm90KFtocmVmXSk6bm90KFt0YWJpbmRleF0pOmZvY3VzLCBhOm5vdChbaHJlZl0pOm5vdChbdGFiaW5kZXhdKTpob3ZlciB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmE6bm90KFtocmVmXSk6bm90KFt0YWJpbmRleF0pOmZvY3VzIHtcbiAgb3V0bGluZTogMDtcbn1cblxucHJlLFxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtO1xufVxuXG5wcmUge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtO1xuICBvdmVyZmxvdzogYXV0bztcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBzY3JvbGxiYXI7XG59XG5cbmZpZ3VyZSB7XG4gIG1hcmdpbjogMCAwIDFyZW07XG59XG5cbmltZyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuc3ZnOm5vdCg6cm9vdCkge1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuXG5hLFxuYXJlYSxcbmJ1dHRvbixcbltyb2xlPVwiYnV0dG9uXCJdLFxuaW5wdXQ6bm90KFt0eXBlPVwicmFuZ2VcIl0pLFxubGFiZWwsXG5zZWxlY3QsXG5zdW1tYXJ5LFxudGV4dGFyZWEge1xuICAtbXMtdG91Y2gtYWN0aW9uOiBtYW5pcHVsYXRpb247XG4gICAgICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjtcbn1cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xufVxuXG5jYXB0aW9uIHtcbiAgcGFkZGluZy10b3A6IDAuNzVyZW07XG4gIHBhZGRpbmctYm90dG9tOiAwLjc1cmVtO1xuICBjb2xvcjogIzg2OGU5NjtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgY2FwdGlvbi1zaWRlOiBib3R0b207XG59XG5cbnRoIHtcbiAgdGV4dC1hbGlnbjogaW5oZXJpdDtcbn1cblxubGFiZWwge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbi1ib3R0b206IC41cmVtO1xufVxuXG5idXR0b24ge1xuICBib3JkZXItcmFkaXVzOiAwO1xufVxuXG5idXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkO1xuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7XG59XG5cbmlucHV0LFxuYnV0dG9uLFxuc2VsZWN0LFxub3B0Z3JvdXAsXG50ZXh0YXJlYSB7XG4gIG1hcmdpbjogMDtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIGZvbnQtc2l6ZTogaW5oZXJpdDtcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG59XG5cbmJ1dHRvbixcbmlucHV0IHtcbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lO1xufVxuXG5idXR0b24sXG5odG1sIFt0eXBlPVwiYnV0dG9uXCJdLFxuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG59XG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xufVxuXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0sXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiAwO1xufVxuXG5pbnB1dFt0eXBlPVwiZGF0ZVwiXSxcbmlucHV0W3R5cGU9XCJ0aW1lXCJdLFxuaW5wdXRbdHlwZT1cImRhdGV0aW1lLWxvY2FsXCJdLFxuaW5wdXRbdHlwZT1cIm1vbnRoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBsaXN0Ym94O1xufVxuXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvO1xuICByZXNpemU6IHZlcnRpY2FsO1xufVxuXG5maWVsZHNldCB7XG4gIG1pbi13aWR0aDogMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IDA7XG59XG5cbmxlZ2VuZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICB3aWR0aDogMTAwJTtcbiAgbWF4LXdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAwO1xuICBtYXJnaW4tYm90dG9tOiAuNXJlbTtcbiAgZm9udC1zaXplOiAxLjVyZW07XG4gIGxpbmUtaGVpZ2h0OiBpbmhlcml0O1xuICBjb2xvcjogaW5oZXJpdDtcbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbn1cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbn1cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG5vdXRwdXQge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG59XG5cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07XG59XG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTtcbn1cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XG59XG4vKiMgc291cmNlTWFwcGluZ1VSTD1ib290c3RyYXAtcmVib290LmNzcy5tYXAgKi9cbiIsIiosXG4qOjpiZWZvcmUsXG4qOjphZnRlciB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuaHRtbCB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLW1zLW92ZXJmbG93LXN0eWxlOiBzY3JvbGxiYXI7XG4gIC13ZWJraXQtdGFwLWhpZ2hsaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuQC1tcy12aWV3cG9ydCB7XG4gIHdpZHRoOiBkZXZpY2Utd2lkdGg7IH1cblxuYXJ0aWNsZSwgYXNpZGUsIGRpYWxvZywgZmlnY2FwdGlvbiwgZmlndXJlLCBmb290ZXIsIGhlYWRlciwgaGdyb3VwLCBtYWluLCBuYXYsIHNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG5ib2R5IHtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlNlZ29lIFVJXCIsIFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBBcmlhbCwgc2Fucy1zZXJpZiwgXCJBcHBsZSBDb2xvciBFbW9qaVwiLCBcIlNlZ29lIFVJIEVtb2ppXCIsIFwiU2Vnb2UgVUkgU3ltYm9sXCI7XG4gIGZvbnQtc2l6ZTogMXJlbTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgbGluZS1oZWlnaHQ6IDEuNTtcbiAgY29sb3I6ICMyMTI1Mjk7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cblxuW3RhYmluZGV4PVwiLTFcIl06Zm9jdXMge1xuICBvdXRsaW5lOiBub25lICFpbXBvcnRhbnQ7IH1cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgaGVpZ2h0OiAwO1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMC41cmVtOyB9XG5cbnAge1xuICBtYXJnaW4tdG9wOiAwO1xuICBtYXJnaW4tYm90dG9tOiAxcmVtOyB9XG5cbmFiYnJbdGl0bGVdLFxuYWJicltkYXRhLW9yaWdpbmFsLXRpdGxlXSB7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAtd2Via2l0LXRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICBjdXJzb3I6IGhlbHA7XG4gIGJvcmRlci1ib3R0b206IDA7IH1cblxuYWRkcmVzcyB7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7IH1cblxub2wsXG51bCxcbmRsIHtcbiAgbWFyZ2luLXRvcDogMDtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuXG5vbCBvbCxcbnVsIHVsLFxub2wgdWwsXG51bCBvbCB7XG4gIG1hcmdpbi1ib3R0b206IDA7IH1cblxuZHQge1xuICBmb250LXdlaWdodDogNzAwOyB9XG5cbmRkIHtcbiAgbWFyZ2luLWJvdHRvbTogLjVyZW07XG4gIG1hcmdpbi1sZWZ0OiAwOyB9XG5cbmJsb2NrcXVvdGUge1xuICBtYXJnaW46IDAgMCAxcmVtOyB9XG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYzsgfVxuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbnN1YixcbnN1cCB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtLjVlbTsgfVxuXG5hIHtcbiAgY29sb3I6ICMwMDdiZmY7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7IH1cblxuYTpob3ZlciB7XG4gIGNvbG9yOiAjMDA1NmIzO1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG5hOm5vdChbaHJlZl0pOm5vdChbdGFiaW5kZXhdKSB7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuYTpub3QoW2hyZWZdKTpub3QoW3RhYmluZGV4XSk6Zm9jdXMsIGE6bm90KFtocmVmXSk6bm90KFt0YWJpbmRleF0pOmhvdmVyIHtcbiAgY29sb3I6IGluaGVyaXQ7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTsgfVxuXG5hOm5vdChbaHJlZl0pOm5vdChbdGFiaW5kZXhdKTpmb2N1cyB7XG4gIG91dGxpbmU6IDA7IH1cblxucHJlLFxuY29kZSxcbmtiZCxcbnNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIGZvbnQtc2l6ZTogMWVtOyB9XG5cbnByZSB7XG4gIG1hcmdpbi10b3A6IDA7XG4gIG1hcmdpbi1ib3R0b206IDFyZW07XG4gIG92ZXJmbG93OiBhdXRvO1xuICAtbXMtb3ZlcmZsb3ctc3R5bGU6IHNjcm9sbGJhcjsgfVxuXG5maWd1cmUge1xuICBtYXJnaW46IDAgMCAxcmVtOyB9XG5cbmltZyB7XG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuYSxcbmFyZWEsXG5idXR0b24sXG5bcm9sZT1cImJ1dHRvblwiXSxcbmlucHV0Om5vdChbdHlwZT1cInJhbmdlXCJdKSxcbmxhYmVsLFxuc2VsZWN0LFxuc3VtbWFyeSxcbnRleHRhcmVhIHtcbiAgLW1zLXRvdWNoLWFjdGlvbjogbWFuaXB1bGF0aW9uO1xuICB0b3VjaC1hY3Rpb246IG1hbmlwdWxhdGlvbjsgfVxuXG50YWJsZSB7XG4gIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IH1cblxuY2FwdGlvbiB7XG4gIHBhZGRpbmctdG9wOiAwLjc1cmVtO1xuICBwYWRkaW5nLWJvdHRvbTogMC43NXJlbTtcbiAgY29sb3I6ICM4NjhlOTY7XG4gIHRleHQtYWxpZ246IGxlZnQ7XG4gIGNhcHRpb24tc2lkZTogYm90dG9tOyB9XG5cbnRoIHtcbiAgdGV4dC1hbGlnbjogaW5oZXJpdDsgfVxuXG5sYWJlbCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgbWFyZ2luLWJvdHRvbTogLjVyZW07IH1cblxuYnV0dG9uIHtcbiAgYm9yZGVyLXJhZGl1czogMDsgfVxuXG5idXR0b246Zm9jdXMge1xuICBvdXRsaW5lOiAxcHggZG90dGVkO1xuICBvdXRsaW5lOiA1cHggYXV0byAtd2Via2l0LWZvY3VzLXJpbmctY29sb3I7IH1cblxuaW5wdXQsXG5idXR0b24sXG5zZWxlY3QsXG5vcHRncm91cCxcbnRleHRhcmVhIHtcbiAgbWFyZ2luOiAwO1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgZm9udC1zaXplOiBpbmhlcml0O1xuICBsaW5lLWhlaWdodDogaW5oZXJpdDsgfVxuXG5idXR0b24sXG5pbnB1dCB7XG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgfVxuXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG5pbnB1dFt0eXBlPVwicmFkaW9cIl0sXG5pbnB1dFt0eXBlPVwiY2hlY2tib3hcIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBwYWRkaW5nOiAwOyB9XG5cbmlucHV0W3R5cGU9XCJkYXRlXCJdLFxuaW5wdXRbdHlwZT1cInRpbWVcIl0sXG5pbnB1dFt0eXBlPVwiZGF0ZXRpbWUtbG9jYWxcIl0sXG5pbnB1dFt0eXBlPVwibW9udGhcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGxpc3Rib3g7IH1cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbiAgcmVzaXplOiB2ZXJ0aWNhbDsgfVxuXG5maWVsZHNldCB7XG4gIG1pbi13aWR0aDogMDtcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwO1xuICBib3JkZXI6IDA7IH1cblxubGVnZW5kIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHdpZHRoOiAxMDAlO1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIHBhZGRpbmc6IDA7XG4gIG1hcmdpbi1ib3R0b206IC41cmVtO1xuICBmb250LXNpemU6IDEuNXJlbTtcbiAgbGluZS1oZWlnaHQ6IGluaGVyaXQ7XG4gIGNvbG9yOiBpbmhlcml0O1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyB9XG5cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbm91dHB1dCB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jazsgfVxuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG5baGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsgfVxuXG4vKiMgc291cmNlTWFwcGluZ1VSTD1ib290c3RyYXAtcmVib290LmNzcy5tYXAgKi9cbmJvZHkge1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCAnU2Vnb2UgVUknLCBSb2JvdG8sIE94eWdlbiwgVWJ1bnR1LCBDYW50YXJlbGwsICdPcGVuIFNhbnMnLCAnSGVsdmV0aWNhIE5ldWUnLCBzYW5zLXNlcmlmO1xuICAvKiBmb250IHN0YWNrIGZyb20gTWVkaXVtICovIH1cblxuQG1lZGlhIChtaW4td2lkdGg6IDc2LjdlbSkge1xuICBAZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0xhdG8nO1xuICAgIHNyYzogdXJsKFwiL2ZvbnQvTGF0by1SZWd1bGFyLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpOyB9XG4gIEBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnTGF0byBCbGFjayc7XG4gICAgc3JjOiB1cmwoXCIvZm9udC9MYXRvLUJsYWNrLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpOyB9XG4gIEBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiAnTGF0byBCb2xkJztcbiAgICBzcmM6IHVybChcIi9mb250L0xhdG8tQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTsgfVxuICBAZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogJ0xhdG8gTGlnaHQnO1xuICAgIHNyYzogdXJsKFwiL2ZvbnQvTGF0by1MaWdodC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKTsgfVxuICBib2R5IHtcbiAgICBmb250LWZhbWlseTogXCJMYXRvXCI7IH1cbiAgaDEge1xuICAgIGZvbnQtZmFtaWx5OiBcIkxhdG8gQmxhY2tcIjsgfVxuICBoMiB7XG4gICAgZm9udC1mYW1pbHk6IFwiTGF0byBCb2xkXCI7IH0gfVxuXG5odG1sIHtcbiAgLyogc2V0IGJhc2UgZm9udC1zaXplIHRvIGVxdWl2IFwiMTBweFwiLCB3aGljaCBpcyBhZGFwdGVkIHRvIHJlbSB1bml0ICovXG4gIGZvbnQtc2l6ZTogNjIuNSU7XG4gIC8qIElFOS1JRTExIG1hdGggZml4aW5nLiBTZWUgaHR0cDovL2JpdC5seS8xZzRYMGJYICovXG4gIGZvbnQtc2l6ZTogY2FsYygxZW0gKiAwLjYyNSk7IH1cblxuYm9keSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGNvbG9yOiAjMzEzMTMxO1xuICBiYWNrZ3JvdW5kOiAjYWVkMmRkOyB9XG5cbi5pbnZpc2libGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIGJvcmRlcjogMDsgfVxuXG4uYnV0dG9uIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBwYWRkaW5nOiAxcmVtIDJyZW07XG4gIGZvbnQtc2l6ZTogMi43cmVtO1xuICBsZXR0ZXItc3BhY2luZzogMnB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBjb2xvcjogIzI3MmY4MDtcbiAgYm9yZGVyOiA1cHggc29saWQgIzI3MmY4MDsgfVxuICAuYnV0dG9uLmJ1dHRvbi0tY3RhIHtcbiAgICBjb2xvcjogI2ZlZmVmZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYmFja2dyb3VuZDogI2Y4NzMzOTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICBmb250LXNpemU6IDIuOXJlbTsgfVxuXG5mb290ZXIge1xuICBtYXJnaW4tdG9wOiBhdXRvO1xuICBjb2xvcjogIzMxMzEzMTtcbiAgYmFja2dyb3VuZDogI2ZlZmVmZTsgfVxuICBmb290ZXIgLmZvb3Rlci1pbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBtYXgtd2lkdGg6IDk5LjFlbTsgfVxuICBmb290ZXIgYSB7XG4gICAgY29sb3I6ICM2YTZhNmE7IH1cbiAgZm9vdGVyIHVsIHtcbiAgICBtYXJnaW46IDAgMCAycmVtO1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgZm9vdGVyIGxpIHtcbiAgICBsaXN0LXN0eWxlOiBub25lOyB9XG5cbi5iYW5uZXIge1xuICBjb2xvcjogI2FlZDJkZDtcbiAgYmFja2dyb3VuZDogIzI3MmY4MDsgfVxuICAuYmFubmVyIC5oZWFkZXItaW50IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luOiAwIGF1dG87XG4gICAgbWF4LXdpZHRoOiAxMTkuOWVtO1xuICAgIG1pbi1oZWlnaHQ6IDdyZW07IH1cbiAgLmJhbm5lciAubG9nbyB7XG4gICAgZm9udC1zaXplOiAyLjVyZW07IH1cbiAgLmJhbm5lciAuYmFzZWxpbmUge1xuICAgIG1hcmdpbjogMCAwLjVyZW0gMCAycmVtO1xuICAgIGxpbmUtaGVpZ2h0OiAxLjE7XG4gICAgZm9udC1zaXplOiAxLjNyZW07IH1cbiAgICAuYmFubmVyIC5iYXNlbGluZSBzcGFuIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrOyB9XG4gIC5iYW5uZXIgbmF2IHtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBmb250LXNpemU6IDEuNHJlbTsgfVxuICAuYmFubmVyIHVsIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIG1hcmdpbjogMCAxcmVtO1xuICAgIHBhZGRpbmc6IDA7IH1cbiAgLmJhbm5lciBsaSB7XG4gICAgbWFyZ2luOiAwIDAuOHJlbTtcbiAgICBsaXN0LXN0eWxlOiBub25lOyB9XG4gIC5iYW5uZXIgbmF2IGEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXdlaWdodDogOTAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgY29sb3I6ICNmZWZlZmU7IH1cbiAgICAuYmFubmVyIG5hdiBhOmhvdmVyLCAuYmFubmVyIG5hdiBhOmZvY3VzIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiAjZmVmZWZlOyB9XG4gICAgLmJhbm5lciBuYXYgYTpob3ZlcjpiZWZvcmUsIC5iYW5uZXIgbmF2IGE6Zm9jdXM6YmVmb3JlLCAuYmFubmVyIG5hdiBhLmFjdGl2ZTpiZWZvcmUge1xuICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgei1pbmRleDogMTtcbiAgICAgIGNvbnRlbnQ6ICcnO1xuICAgICAgdG9wOiA2MCU7XG4gICAgICBsZWZ0OiA1MCU7XG4gICAgICB3aWR0aDogMTEwJTtcbiAgICAgIGhlaWdodDogNXB4O1xuICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC01MCUpO1xuICAgICAgYmFja2dyb3VuZDogI2Y4NzMzOTsgfVxuICAgIC5iYW5uZXIgbmF2IGEgc3BhbiB7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB6LWluZGV4OiAyOyB9XG5cbm1haW4gLm1haW4taW50IHtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIG1heC13aWR0aDogOTkuMWVtO1xuICBwYWRkaW5nOiAwIDV2dzsgfVxuXG4uaG9tZSBtYWluIHtcbiAgcGFkZGluZy1ib3R0b206IDIwdmg7IH1cbiAgLmhvbWUgbWFpbiBoZWFkZXIge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBtaW4taGVpZ2h0OiA3MHZoO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBiYWNrZ3JvdW5kOiB1cmwoKTsgfVxuICAgIC5ob21lIG1haW4gaGVhZGVyIGgxIHtcbiAgICAgIGZvbnQtc2l6ZTogNS43cmVtO1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgICAgIGNvbG9yOiAjMjcyZjgwOyB9XG4gICAgICAuaG9tZSBtYWluIGhlYWRlciBoMSBzcGFuIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7IH1cbiAgICAgIC5ob21lIG1haW4gaGVhZGVyIGgxIGEge1xuICAgICAgICBmb250LXNpemU6IDIuOXJlbTsgfVxuICAgIC5ob21lIG1haW4gaGVhZGVyICsgcCB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAzcmVtO1xuICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgY29sb3I6ICMyNzJmODA7IH1cbiAgICAgIC5ob21lIG1haW4gaGVhZGVyICsgcCArIHAge1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzcmVtO1xuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuZm9ybSBbY2xhc3MqPVwic3RlcFwiXSA+IGxlZ2VuZCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBmbGV4LXN0YXJ0O1xuICB3aWR0aDogYXV0bztcbiAgbWF4LXdpZHRoOiBub25lOyB9XG4gIGZvcm0gW2NsYXNzKj1cInN0ZXBcIl0gPiBsZWdlbmQgc3BhbiB7XG4gICAgcGFkZGluZzogLjVyZW0gMXJlbTsgfVxuICBmb3JtIFtjbGFzcyo9XCJzdGVwXCJdID4gbGVnZW5kIHNwYW46Zmlyc3Qtb2YtdHlwZSB7XG4gICAgYmFja2dyb3VuZDogI2Y4NzMzOTtcbiAgICBjb2xvcjogI2ZlZmVmZTtcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG4gIGZvcm0gW2NsYXNzKj1cInN0ZXBcIl0gPiBsZWdlbmQgc3BhbjpsYXN0LW9mLXR5cGUge1xuICAgIGJhY2tncm91bmQ6ICNmZWZlZmU7XG4gICAgY29sb3I6ICMyNzJmODA7IH1cblxuZm9ybSBbY2xhc3MqPVwic3RlcFwiXSA+IGZpZWxkc2V0IGxlZ2VuZCB7XG4gIGJvcmRlci1sZWZ0OiAzcHggc29saWQgI2Y4NzMzOTtcbiAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICBjb2xvcjogIzI3MmY4MDtcbiAgZm9udC1zaXplOiAxLjRyZW07IH1cblxuZm9ybSBbY2xhc3MqPVwic3RlcFwiXSA+IGZpZWxkc2V0IHtcbiAgcGFkZGluZzogMXJlbSAwO1xuICBtYXJnaW4tYm90dG9tOiAzcmVtOyB9XG4gIGZvcm0gW2NsYXNzKj1cInN0ZXBcIl0gPiBmaWVsZHNldCBsYWJlbCB7XG4gICAgbWFyZ2luOiAwIC41cmVtIDAgMnJlbTsgfVxuICBmb3JtIFtjbGFzcyo9XCJzdGVwXCJdID4gZmllbGRzZXQgaW5wdXRbdHlwZT1cInJhZGlvXCJdIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOyB9XG5cbi5hcnRpY2xlIG1haW4ge1xuICBiYWNrZ3JvdW5kOiAjZmVmZWZlO1xuICBjb2xvcjogIzI3MmY4MDsgfVxuXG4uYXJ0aWNsZSAubWFpbi1pbnQge1xuICBtYXgtd2lkdGg6IDk5LjFlbTsgfVxuXG4uYXJ0aWNsZSBhcnRpY2xlIHtcbiAgZm9udC1zaXplOiAxLjhyZW07IH1cblxuLmFydGljbGUgLmNvdmVyLWltYWdlIHtcbiAgb2JqZWN0LWZpdDogY292ZXI7XG4gIGhlaWdodDogYXV0bztcbiAgbWF4LXdpZHRoOiAxMDAlOyB9XG5cbi5hcnRpY2xlIGgxIHtcbiAgZm9udC1zaXplOiA0LjhyZW07IH1cblxuLmFydGljbGUgaDIge1xuICBmb250LXNpemU6IDMuMnJlbTsgfVxuXG4uYXJ0aWNsZSBoZWFkZXIgKyBwIHN0cm9uZyB7XG4gIGZvbnQtc2l6ZTogMy4ycmVtOyB9XG5cbiNwcm9ncmVzc2JhciB7XG4gIG1hcmdpbi10b3A6IDEwdmg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIC8qQ1NTIGNvdW50ZXJzIHRvIG51bWJlciB0aGUgc3RlcHMqL1xuICBjb3VudGVyLXJlc2V0OiBzdGVwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuXG4jcHJvZ3Jlc3NiYXIgbGkge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIGNvbG9yOiAjYWVkMmRkO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXNpemU6IDlweDtcbiAgd2lkdGg6IDI1JTtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG5cbiNwcm9ncmVzc2JhciBsaTpiZWZvcmUge1xuICBjb250ZW50OiBjb3VudGVyKHN0ZXApO1xuICBjb3VudGVyLWluY3JlbWVudDogc3RlcDtcbiAgd2lkdGg6IDMwcHg7XG4gIGxpbmUtaGVpZ2h0OiAzMHB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgZm9udC1zaXplOiAxcmVtO1xuICBjb2xvcjogI2FlZDJkZDtcbiAgYmFja2dyb3VuZDogIzI3MmY4MDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBtYXJnaW46IDAgYXV0byA1cHggYXV0bztcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi8qcHJvZ3Jlc3NiYXIgY29ubmVjdG9ycyovXG4jcHJvZ3Jlc3NiYXIgbGk6YWZ0ZXIge1xuICBjb250ZW50OiAnJztcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogOHB4O1xuICBiYWNrZ3JvdW5kOiAjMjcyZjgwO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGxlZnQ6IC01MCU7XG4gIHRvcDogMTFweDtcbiAgei1pbmRleDogLTE7IH1cblxuI3Byb2dyZXNzYmFyIGxpOmZpcnN0LWNoaWxkOmFmdGVyIHtcbiAgY29udGVudDogbm9uZTsgfVxuXG4jcHJvZ3Jlc3NiYXIgbGkuYWN0aXZlOmJlZm9yZSwgI3Byb2dyZXNzYmFyIGxpLmFjdGl2ZTphZnRlciB7XG4gIGJhY2tncm91bmQ6ICNmODczMzk7XG4gIGNvbG9yOiAjMjcyZjgwOyB9XG4iLCIvLyBDT0xPUlxuJGNvbG9yLW1haW46ICMyNzJmODA7XG4kY29sb3ItaGlnaGxpZ2h0OiAjZjg3MzM5O1xuJHdoaXRlOiAjZmVmZWZlO1xuJGRhcms6ICMzMTMxMzE7XG4kZ3JheTogIzZhNmE2YTtcbiRiZ2hlYWQ6ICNkN2Q1ZDU7XG4kYmdtYWluOiAjYWVkMmRkO1xuJGJveHNoYWRvdzogMCA0cHggNnB4IDAgaHNsYSgwJSwwJSwwJSwwLjIpO1xuXG4vLyBCUkVBS1BPSU5UXG4kdGlueTogNTQuM2VtICFkZWZhdWx0OyAvLyA1NDNweFxuJHNtYWxsOiA3Ni43ZW0gIWRlZmF1bHQ7IC8vIDc2N3B4XG4kbWVkaXVtOiA5OS4xZW0gIWRlZmF1bHQ7IC8vIDk5MXB4XG4kbGFyZ2U6IDExOS45ZW0gIWRlZmF1bHQ7IC8vIDExOTlweFxuJGV4dHJhLWxhcmdlOiAxNDMuOWVtICFkZWZhdWx0OyAvLyAxNDM5cHhcblxuLy8gU0FGRSBNT0JJTEVcbmJvZHkge1xuICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSxcbiAgQmxpbmtNYWNTeXN0ZW1Gb250LFxuICAnU2Vnb2UgVUknLFxuICBSb2JvdG8sXG4gIE94eWdlbixcbiAgVWJ1bnR1LFxuICBDYW50YXJlbGwsXG4gICdPcGVuIFNhbnMnLFxuICAnSGVsdmV0aWNhIE5ldWUnLFxuICBzYW5zLXNlcmlmOyAvKiBmb250IHN0YWNrIGZyb20gTWVkaXVtICovXG59XG5AbWVkaWEgKG1pbi13aWR0aDokc21hbGwpIHtcbiAgQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnTGF0byc7XG4gIHNyYzogdXJsKCcvZm9udC9MYXRvLVJlZ3VsYXIud29mZjInKSBmb3JtYXQoJ3dvZmYyJyk7XG4gIH1cbiAgQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnTGF0byBCbGFjayc7XG4gIHNyYzogdXJsKCcvZm9udC9MYXRvLUJsYWNrLndvZmYyJykgZm9ybWF0KCd3b2ZmMicpO1xuICB9XG4gIEBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ0xhdG8gQm9sZCc7XG4gIHNyYzogdXJsKCcvZm9udC9MYXRvLUJvbGQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyk7XG4gIH1cbiAgQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnTGF0byBMaWdodCc7XG4gIHNyYzogdXJsKCcvZm9udC9MYXRvLUxpZ2h0LndvZmYyJykgZm9ybWF0KCd3b2ZmMicpO1xuICB9XG4gIGJvZHkge1xuICAgIGZvbnQtZmFtaWx5OlwiTGF0b1wiO1xuICB9XG4gIGgxIHtcbiAgICBmb250LWZhbWlseTpcIkxhdG8gQmxhY2tcIjtcbiAgfVxuICBoMiB7XG4gICAgZm9udC1mYW1pbHk6XCJMYXRvIEJvbGRcIjtcbiAgfVxufVxuLy8gR0VORVJBTFxuaHRtbCB7XG4gIC8qIHNldCBiYXNlIGZvbnQtc2l6ZSB0byBlcXVpdiBcIjEwcHhcIiwgd2hpY2ggaXMgYWRhcHRlZCB0byByZW0gdW5pdCAqL1xuICBmb250LXNpemU6IDYyLjUlO1xuICAvKiBJRTktSUUxMSBtYXRoIGZpeGluZy4gU2VlIGh0dHA6Ly9iaXQubHkvMWc0WDBiWCAqL1xuICBmb250LXNpemU6IGNhbGMoMWVtICogMC42MjUpO1xufVxuYm9keSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgbWluLWhlaWdodDogMTAwdmg7XG4gIGNvbG9yOiAkZGFyaztcbiAgYmFja2dyb3VuZDogJGJnbWFpbjtcbn1cbi5pbnZpc2libGUge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIGNsaXA6IHJlY3QoMCAwIDAgMCk7XG4gIG1hcmdpbjogLTFweDtcbiAgcGFkZGluZzogMDtcbiAgd2lkdGg6IDFweDtcbiAgaGVpZ2h0OiAxcHg7XG4gIGJvcmRlcjogMDtcbn1cbi5idXR0b24ge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIHBhZGRpbmc6IDFyZW0gMnJlbTtcbiAgZm9udC1zaXplOiAyLjdyZW07XG4gIGxldHRlci1zcGFjaW5nOiAycHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGNvbG9yOiAkY29sb3ItbWFpbjtcbiAgYm9yZGVyOiA1cHggc29saWQgJGNvbG9yLW1haW47XG4gICYuYnV0dG9uLS1jdGEge1xuICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJhY2tncm91bmQ6ICRjb2xvci1oaWdobGlnaHQ7XG4gICAgdGV4dC10cmFuc2Zvcm06bm9uZTtcbiAgICBmb250LXNpemU6Mi45cmVtO1xuICB9XG59XG5cbi8vIGZvb3RlclxuZm9vdGVyIHtcbiAgbWFyZ2luLXRvcDphdXRvO1xuICBjb2xvcjogJGRhcms7XG4gIGJhY2tncm91bmQ6ICR3aGl0ZTtcbiAgLmZvb3Rlci1pbnQge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6c3BhY2UtYXJvdW5kO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG1heC13aWR0aDogJG1lZGl1bTtcbiAgfVxuICBhIHtcbiAgICBjb2xvcjogJGdyYXk7XG4gIH1cbiAgdWwge1xuICAgIG1hcmdpbjowIDAgMnJlbTtcbiAgICBwYWRkaW5nOjA7XG4gIH1cbiAgbGkge1xuICAgIGxpc3Qtc3R5bGU6bm9uZTtcbiAgfVxufVxuLy8gSGVhZGVyXG4uYmFubmVyIHtcbiAgY29sb3I6ICRiZ21haW47XG4gIGJhY2tncm91bmQ6ICRjb2xvci1tYWluO1xuICAuaGVhZGVyLWludCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG1heC13aWR0aDogJGxhcmdlO1xuICAgIG1pbi1oZWlnaHQ6IDdyZW07XG4gIH1cbiAgLmxvZ28ge1xuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xuICB9XG4gIC5iYXNlbGluZSB7XG4gICAgbWFyZ2luOiAwIDAuNXJlbSAwIDJyZW07XG4gICAgbGluZS1oZWlnaHQ6IDEuMTtcbiAgICBmb250LXNpemU6MS4zcmVtO1xuICAgIHNwYW4ge1xuICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICB9XG4gIG5hdiB7XG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gICAgZm9udC1zaXplOjEuNHJlbTtcbiAgfVxuICB1bCB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbiAgICBtYXJnaW46IDAgMXJlbTtcbiAgICBwYWRkaW5nOiAwO1xuICB9XG4gIGxpIHtcbiAgICBtYXJnaW46IDAgMC44cmVtO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIH1cbiAgbmF2IGEge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBmb250LXdlaWdodDogOTAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICAmOmhvdmVyLCAmOmZvY3VzIHtcbiAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgfVxuICAgICY6aG92ZXI6YmVmb3JlLCAmOmZvY3VzOmJlZm9yZSwgJi5hY3RpdmU6YmVmb3JlIHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHotaW5kZXg6IDE7XG4gICAgICBjb250ZW50OiAnJztcbiAgICAgIHRvcDogNjAlO1xuICAgICAgbGVmdDogNTAlO1xuICAgICAgd2lkdGg6IDExMCU7XG4gICAgICBoZWlnaHQ6IDVweDtcbiAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtNTAlKTtcbiAgICAgIGJhY2tncm91bmQ6ICRjb2xvci1oaWdobGlnaHQ7XG4gICAgfVxuICAgIHNwYW4ge1xuICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICAgei1pbmRleDogMjtcbiAgICB9XG4gIH1cbn1cbi8vIE1haW5cbm1haW4ge1xuICAubWFpbi1pbnQge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIG1heC13aWR0aDogJG1lZGl1bTtcbiAgICBwYWRkaW5nOjAgNXZ3O1xuICB9XG59XG4vLyBIb21lXG4uaG9tZSB7XG4gIG1haW4ge1xuICAgIHBhZGRpbmctYm90dG9tOjIwdmg7XG4gICAgaGVhZGVyIHtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICBtaW4taGVpZ2h0OiA3MHZoO1xuICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgYmFja2dyb3VuZDogdXJsKCk7XG4gICAgICBoMSB7XG4gICAgICAgIGZvbnQtc2l6ZTogNS43cmVtO1xuICAgICAgICBsaW5lLWhlaWdodDoxLjE7XG4gICAgICAgIGNvbG9yOiRjb2xvci1tYWluO1xuICAgICAgICBzcGFuIHtcbiAgICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgfVxuICAgICAgICBhIHtcbiAgICAgICAgICBmb250LXNpemU6Mi45cmVtO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICAmICsgcCB7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDNyZW07XG4gICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgICAgICBjb2xvcjogJGNvbG9yLW1haW47XG4gICAgICAgICYgKyBwIHtcbiAgICAgICAgICBtYXJnaW4tYm90dG9tOiAzcmVtO1xuICAgICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuZm9ybSB7XG4gIFtjbGFzcyo9XCJzdGVwXCJdIHtcbiAgICAmID4gbGVnZW5kIHtcbiAgICAgIGRpc3BsYXk6ZmxleDtcbiAgICAgIGZsZXgtZGlyZWN0aW9uOmNvbHVtbjtcbiAgICAgIGFsaWduLWl0ZW1zOmZsZXgtc3RhcnQ7XG4gICAgICB3aWR0aDphdXRvO1xuICAgICAgbWF4LXdpZHRoOm5vbmU7XG4gICAgICBzcGFuIHtcbiAgICAgICAgcGFkZGluZzouNXJlbSAxcmVtO1xuICAgICAgfVxuICAgICAgc3BhbjpmaXJzdC1vZi10eXBlIHtcbiAgICAgIGJhY2tncm91bmQ6JGNvbG9yLWhpZ2hsaWdodDtcbiAgICAgIGNvbG9yOiR3aGl0ZTtcbiAgICAgIHRleHQtdHJhbnNmb3JtOnVwcGVyY2FzZTtcbiAgICAgIH1cbiAgICAgIHNwYW46bGFzdC1vZi10eXBlIHtcbiAgICAgICAgYmFja2dyb3VuZDokd2hpdGU7XG4gICAgICAgIGNvbG9yOiRjb2xvci1tYWluO1xuICAgICAgfVxuICAgIH1cbiAgICAmID4gZmllbGRzZXQgbGVnZW5kIHtcbiAgICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgJGNvbG9yLWhpZ2hsaWdodDtcbiAgICAgIHBhZGRpbmctbGVmdDoxcmVtO1xuICAgICAgY29sb3I6JGNvbG9yLW1haW47XG4gICAgICBmb250LXNpemU6MS40cmVtO1xuICAgIH1cbiAgICA+IGZpZWxkc2V0IHtcbiAgICAgIHBhZGRpbmc6MXJlbSAwO1xuICAgICAgbWFyZ2luLWJvdHRvbTozcmVtO1xuICAgICAgbGFiZWwge1xuICAgICAgICBtYXJnaW46MCAuNXJlbSAwIDJyZW07XG4gICAgICB9XG4gICAgICBpbnB1dFt0eXBlPVwicmFkaW9cIl0ge1xuICAgICAgICB2ZXJ0aWNhbC1hbGlnbjptaWRkbGU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4vLyBBcnRpY2xlXG4uYXJ0aWNsZSB7XG4gIG1haW4ge1xuICAgIGJhY2tncm91bmQ6JHdoaXRlO1xuICAgIGNvbG9yOiRjb2xvci1tYWluO1xuICB9XG4gIC5tYWluLWludCB7XG4gICAgbWF4LXdpZHRoOiRtZWRpdW07XG4gIH1cbiAgYXJ0aWNsZSB7XG4gICAgZm9udC1zaXplOjEuOHJlbTtcbiAgfVxuICAuY292ZXItaW1hZ2Uge1xuICAgIG9iamVjdC1maXQ6Y292ZXI7XG4gICAgaGVpZ2h0OmF1dG87XG4gICAgbWF4LXdpZHRoOjEwMCU7XG4gIH1cbiAgaDEge1xuICAgIGZvbnQtc2l6ZTo0LjhyZW07XG4gIH1cbiAgaDIge1xuICAgIGZvbnQtc2l6ZTozLjJyZW07XG4gIH1cbiAgaGVhZGVyICsgcCBzdHJvbmcge1xuICAgIGZvbnQtc2l6ZTozLjJyZW07XG4gIH1cbn1cblxuLy8gUHJvZ3Jlc3MgQmFyXG4jcHJvZ3Jlc3NiYXIge1xuICBtYXJnaW4tdG9wOiAxMHZoO1xuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuXHRvdmVyZmxvdzogaGlkZGVuO1xuXHQvKkNTUyBjb3VudGVycyB0byBudW1iZXIgdGhlIHN0ZXBzKi9cblx0Y291bnRlci1yZXNldDogc3RlcDtcbiAgZGlzcGxheTpmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjpyb3c7XG4gIGp1c3RpZnktY29udGVudDpjZW50ZXI7XG59XG4jcHJvZ3Jlc3NiYXIgbGkge1xuXHRsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG5cdGNvbG9yOiAkYmdtYWluO1xuXHR0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuXHRmb250LXNpemU6IDlweDtcblx0d2lkdGg6IDI1JTtcblx0cG9zaXRpb246IHJlbGF0aXZlO1xufVxuI3Byb2dyZXNzYmFyIGxpOmJlZm9yZSB7XG5cdGNvbnRlbnQ6IGNvdW50ZXIoc3RlcCk7XG5cdGNvdW50ZXItaW5jcmVtZW50OiBzdGVwO1xuXHR3aWR0aDogMzBweDtcblx0bGluZS1oZWlnaHQ6IDMwcHg7XG5cdGRpc3BsYXk6IGJsb2NrO1xuXHRmb250LXNpemU6IDFyZW07XG5cdGNvbG9yOiAkYmdtYWluO1xuXHRiYWNrZ3JvdW5kOiAkY29sb3ItbWFpbjtcblx0Ym9yZGVyLXJhZGl1czogNTAlO1xuXHRtYXJnaW46IDAgYXV0byA1cHggYXV0bztcbiAgdGV4dC1hbGlnbjpjZW50ZXI7XG59XG4vKnByb2dyZXNzYmFyIGNvbm5lY3RvcnMqL1xuI3Byb2dyZXNzYmFyIGxpOmFmdGVyIHtcblx0Y29udGVudDogJyc7XG5cdHdpZHRoOiAxMDAlO1xuXHRoZWlnaHQ6IDhweDtcblx0YmFja2dyb3VuZDogJGNvbG9yLW1haW47XG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0bGVmdDogLTUwJTtcblx0dG9wOjExcHg7XG4gIHotaW5kZXg6IC0xO1xufVxuI3Byb2dyZXNzYmFyIGxpOmZpcnN0LWNoaWxkOmFmdGVyIHtcblx0Y29udGVudDogbm9uZTtcbn1cbiNwcm9ncmVzc2JhciBsaS5hY3RpdmU6YmVmb3JlLCAgI3Byb2dyZXNzYmFyIGxpLmFjdGl2ZTphZnRlcntcblx0YmFja2dyb3VuZDokY29sb3ItaGlnaGxpZ2h0O1xuXHRjb2xvcjokY29sb3ItbWFpbjtcbn1cbiJdLCJzb3VyY2VSb290IjoiL3Njc3MifQ== */
